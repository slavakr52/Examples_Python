# list_1 = []          # создание списка
# list_1 = list()
# list_1 = [1, 2, 3, 8]
# print(*list_1)       # звёздочка уберёт запятые и скобки

# for i in list_1:     # ещё один метод вывода списка
#     print(i)

# print(len(list_1))   # длина списка

# print(list_1[0])     # обращение к конкретному элементу списка

# list_1 = [1, 5]      # добавление элемента в список
# print(list_1)  
# list_1.append(8)
# print(list_1)  
# list_1.append(85)
# print(list_1)  

# list_1 = []          # добавление элементов с помощью цикла
# for i in range(5):
#     list_1.append(i)
#     print(list_1)

# list_1 = [1, 2, 3]   # удаление последнего элемента массива
# print(list_1.pop())
# print(list_1)
# print(list_1.pop())  # если поставим значение в pop, то по этому индексу удалится элемент
# print(list_1)

# list_1 = [1, 2, 3]   # вставка элемента по индексу
# print(list_1.insert(1, 17))
# print(list_1)




# t = (1, 5, 3, )      # с запятой в конце это кортеж

# v = [1, 8, 9]        # из списка делаем кортеж  
# print(v)
# print(type(v))
# v = tuple(v)
# print(v)
# print(type(v))

# a, b = 1, 2          # варианты присваивания в питоне
# a = b = 1

# v = [1, 8, 9]        # можно положить в переменные по индексам соответственно
# a, b, c = v
# print(a,b,c)

# t = (1, 3, 2, 5,)    # будет ошибка, потому что в кортеже не поддерживается
# t[0] = 2                                             # преобразование аргументов




# d = {}               # создание словаря
# d = dict()
# d['q'] = 'qwerty'
# print(d)
# d['w'] = 'werty'
# print(d)
# print(d['q'])

# del d['w']           # удаление элемента из словаря

# for item in d:       # печатает все ключи из словаря
#     print(item)      
# for item in d:       # печатает ключ и его значение
#     print('{}: {}'.format(item, d[item]))    

# print(d.items())     # выдаст каждый элемент словаря в отдельном кортеже

# for (i, j) in d.items():  # выдаст все ключи и их значения
#     print(i, j)

# colors = {'red', 'green', 'blue'}   # создание множества (содержит только уникальные значения)
# print(colors)
# colors.add('red')       # соответственно тут ничего не добавится
# print(colors)
# colors.add('black')     # а тут добавится, куда-то в середину, упорядочивания в множествах нет
# print(colors)
# colors.remove('red')    # удаляет элемент (если такого элемента нет, будет ошибка)
# print(colors)
# colors.discard('red')    # сначала проверяет, есть ли элемент, потом удаляет. если нет, то ничего не делает
# print(colors)
# colors.clear()          # очищает множество

# a = {1, 2, 4, 5}
# b = {7, 3, 6, 9}
# c = a.copy()               # скопирует а
# u = a.union(b)             # скопирует из а и из b
# i = a.intersection(b)      # пересечения a и b
# d = a.difference(b)        # вычитает из а всё что есть в b

# a = {1, 2, 4, 5}
# b = frozenset(a)             # замороженное множество

# list_1 = [i for i in range(25) if i % 2 == 0]     # генератор списков в питоне
# print(list_1)

















